#!/bin/bash

# URL target yang akan diuji (ganti dengan URL yang sebenarnya)
TARGET_URL="https://example.com"

# Jumlah total permintaan yang akan dikirim
TOTAL_REQUESTS=1000

# Jumlah permintaan yang dikirim secara bersamaan
CONCURRENCY_LEVEL=10

# Fungsi untuk melakukan pengujian dengan Apache Benchmark
perform_benchmark() {
  local url=$1
  local requests=$2
  local concurrency=$3

  # Menjalankan Apache Benchmark dan menangkap outputnya
  output=$(ab -n $requests -c $concurrency $url)

  # Menampilkan output dari Apache Benchmark
  echo "$output"

  # Ekstrak Requests per second (TPS) dari output
  tps=$(echo "$output" | grep "Requests per second" | awk '{print $4}')

  # Ekstrak Time per request dari output
  time_per_request=$(echo "$output" | grep "Time per request" | grep -v "mean, across all concurrent requests" | awk '{print $4}')

  # Menampilkan hasil TPS dan Time per request
  echo "================================================="
  echo "Hasil Pengujian:"
  echo "Requests per second (TPS): $tps [#/sec] (mean)"
  echo "Time per request: $time_per_request [ms] (mean)"
  echo "================================================="

  # Analisis hasil pengujian
  if (( $(echo "$tps < 10" | bc -l) )); then
    echo "Analisis: Performa server sangat rendah. Pertimbangkan untuk meningkatkan kapasitas server."
  elif (( $(echo "$tps < 50" | bc -l) )); then
    echo "Analisis: Performa server rendah. Mungkin perlu peningkatan kapasitas atau optimasi."
  else
    echo "Analisis: Performa server baik. Tidak ada masalah yang signifikan terdeteksi."
  fi
}

# Fungsi untuk mengumpulkan metrik penggunaan sumber daya dari pod Kubernetes
collect_pod_metrics() {
  echo "Mengumpulkan metrik penggunaan sumber daya pod..."
  kubectl top pod -n (namespace) --no-headers > pod_metrics.txt

  echo "================================================="
  echo "Metrik Penggunaan Sumber Daya Pod:"
  cat pod_metrics.txt
  echo "================================================="
}

# Fungsi untuk menganalisis dan memberikan rekomendasi peningkatan
analyze_and_recommend() {
  echo "Menganalisis metrik penggunaan sumber daya pod..."

  while IFS= read -r line
  do
    pod_name=$(echo $line | awk '{print $1}')
    cpu_usage=$(echo $line | awk '{print $2}' | sed 's/m//')
    mem_usage=$(echo $line | awk '{print $3}' | sed 's/Mi//')

    echo "Pod: $pod_name"
    echo "CPU Usage: $cpu_usage mCPU"
    echo "Memory Usage: $mem_usage Mi"

    if (( cpu_usage > 500 )); then
      echo "Rekomendasi: Pod $pod_name menggunakan CPU tinggi, pertimbangkan untuk meningkatkan alokasi CPU atau menambahkan replika."
    fi

    if (( mem_usage > 500 )); then
      echo "Rekomendasi: Pod $pod_name menggunakan memori tinggi, pertimbangkan untuk meningkatkan alokasi memori atau menambahkan replika."
    fi

    echo "-------------------------------------------------"
  done < pod_metrics.txt

  rm pod_metrics.txt
}

# Melakukan pengujian beban
echo "Starting benchmark test on $TARGET_URL with $TOTAL_REQUESTS requests and concurrency level of $CONCURRENCY_LEVEL..."
perform_benchmark $TARGET_URL $TOTAL_REQUESTS $CONCURRENCY_LEVEL

# Mengumpulkan metrik penggunaan sumber daya dari pod
collect_pod_metrics

# Menganalisis dan memberikan rekomendasi peningkatan
analyze_and_recommend